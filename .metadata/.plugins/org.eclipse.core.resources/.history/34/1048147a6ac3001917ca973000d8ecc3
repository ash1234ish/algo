package practice.algo.linkedlist;

public class ReverseLinkedListRecursive {

	public static void main(String[] args) {
		tatic void main(String[] args) throws IOException { 
            LinkedList llist = new LinkedList(); 
          
            llist.insertNode(20); 
            llist.insertNode(4); 
            llist.insertNode(15); 
            llist.insertNode(85); 
              
            System.out.println("Given linked list:"); 
            printSinglyLinkedList(llist.head, " "); 
              
            System.out.println(); 
            System.out.println("Reversed Linked list:"); 
            Node llist1 = reverse(llist.head); 
            printSinglyLinkedList(llist1, " "); 
  

	}
	
	public static Node reverse(Node head) { 
        if(head == null) { 
            return head; 
        } 
  
        // last node or only one node 
        if(head.next == null) { 
            return head; 
        } 
  
        Node newHeadNode = reverse(head.next); 
  
        head.next.next = head; 
        head.next = null; 
  
        return newHeadNode; 
    } 

}
